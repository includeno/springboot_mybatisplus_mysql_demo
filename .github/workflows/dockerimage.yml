# https://docs.github.com/en/actions/guides
# CI name , it will display on github's action page menu
name: Github Action Build Docker Images
# trigger on which this CI should be run
on: # push operation is operate
  push:
    # here since my repository branch is named `main` , you should follow your own repository like `master`
    branches: [single_table_withxml]
# CI enviroment settings ${{ env.RELEASE_VERSION }} ${{ env.TAG_NAME }}
env:
  RELEASE_VERSION: "single_table_withxml" # version
  TAG_NAME: "springboot_mybatisplus_mysql_demo" #tag 只能小写开头
jobs:
  build:
    name: Github Action Build Docker Images ---- Java SpringBoot
    runs-on: ubuntu-latest # use latest ubuntu to run the job
    strategy:
      matrix:
        java-version: [ '11' ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1 #https://github.com/actions/setup-java
        with:
          java-version: ${{ matrix.java-version }} # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      #构建应用程序
      - name: Build with Maven
        run:
          mvn clean package -DskipTests=true -Dmaven.javadoc.skip=true -B -V

      #设置部分灵活的环境变量
      - name: Sets build date
        run: echo "BUILD_DATE=$(date '+%Y%m%d')" >> $GITHUB_ENV

      #安装docker模拟器 多平台镜像专用
      - name: Installing docker emulators
        run:
          docker run --privileged --rm tonistiigi/binfmt --install all
      #设置docker模拟器
      - name: docker buildx
        run:
          docker buildx create --use --name mybuilder
      #docker hub登录
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      #构建镜像
      - name: Push to Docker Hub
        id: docker_build
        uses: docker/build-push-action@v2 #https://github.com/docker/build-push-action
        with:
          context: . #当前文件夹
          file: Dockerfile #指定镜像dockerfile
          platforms: linux/amd64,linux/arm64 #镜像平台
          tags: "includeno/${{ env.TAG_NAME }}:latest,includeno/${{ env.TAG_NAME }}:${{ env.RELEASE_VERSION }}"
          push: true

      - name: The job has succeeded
        if: ${{ success() }}
        run: echo "success"
      #设置slack消息推送
      #https://github.com/8398a7/action-slack
#      - name: Slack Nofitication
#        uses: 8398a7/action-slack@v3
#        with:
#          status: ${{ job.status }}
#          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
#        if: always() # Pick up events even if the job fails or is canceled.